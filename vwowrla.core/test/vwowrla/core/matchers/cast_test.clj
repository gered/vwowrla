(ns vwowrla.core.matchers.cast-test
  (:import
    (java.util TimeZone))
  (:use
    clojure.test
    vwowrla.core.matchers.matchers-test-utils)
  (:require
    [vwowrla.core.parser :refer [parse-line]]
    [vwowrla.core.preparsing :refer [parse-log-timestamp]]
    [vwowrla.core.matchers :refer [regex-matchers]]))

(def options {:log-owner-char-name "Blasticus"
              :year                2015
              :timezone            (TimeZone/getDefault)
              :windows?            false})

(def owner-char-name (:log-owner-char-name options))
(def year (:year options))
(def timezone (:timezone options))

(deftest cast-begins
  (is (valid-matcher? (get-matcher regex-matchers :cast-begins)))

  (is (= (parse-line "5/25 23:27:34.377  Fei begins to cast Lesser Healing Wave." options)
         {:id          :cast-begins
          :logfmt      :cast-begins
          :event       :cast-begins
          :line        "5/25 23:27:34.377  Fei begins to cast Lesser Healing Wave."
          :timestamp   (parse-log-timestamp "5/25 23:27:34.377" options)
          :source-name "Fei"
          :skill       "Lesser Healing Wave"
          :spell?      true}))

  (is (= (parse-line "5/25 21:42:31.485  Bahamatt begins to perform Auto Shot." options)
         {:id          :cast-begins
          :logfmt      :cast-begins
          :event       :cast-begins
          :line        "5/25 21:42:31.485  Bahamatt begins to perform Auto Shot."
          :timestamp   (parse-log-timestamp "5/25 21:42:31.485" options)
          :source-name "Bahamatt"
          :skill       "Auto Shot"
          :spell?      false}))

  (is (= (parse-line "5/25 23:31:26.154  Laurent begins to perform Pick Lock." options)
         {:id          :cast-begins
          :logfmt      :cast-begins
          :event       :cast-begins
          :line        "5/25 23:31:26.154  Laurent begins to perform Pick Lock."
          :timestamp   (parse-log-timestamp "5/25 23:31:26.154" options)
          :source-name "Laurent"
          :skill       "Pick Lock"
          :spell?      false}))

  ; NOTE: this combat log entry was not generated by the WoW client, it was hand-written for this test
  (is (= (parse-line "1/2 3:45:00.123  You begin to perform Pick Lock." options)
         {:id          :cast-begins
          :logfmt      :cast-begins
          :event       :cast-begins
          :line        "1/2 3:45:00.123  You begin to perform Pick Lock."
          :timestamp   (parse-log-timestamp "1/2 3:45:00.123" options)
          :source-name owner-char-name
          :skill       "Pick Lock"
          :spell?      false})))

(deftest cast-instant
  (is (valid-matcher? (get-matcher regex-matchers :cast)))

  (is (= (parse-line "5/25 21:14:54.539  Eggs casts Place Unfired Blade." options)
         {:id          :cast
          :logfmt      :cast
          :event       :cast
          :line        "5/25 21:14:54.539  Eggs casts Place Unfired Blade."
          :timestamp   (parse-log-timestamp "5/25 21:14:54.539" options)
          :source-name "Eggs"
          :skill       "Place Unfired Blade"
          :spell?      true}))

  (is (= (parse-line "5/25 21:15:09.436  Pwnstar performs Berserking." options)
         {:id          :cast
          :logfmt      :cast
          :event       :cast
          :line        "5/25 21:15:09.436  Pwnstar performs Berserking."
          :timestamp   (parse-log-timestamp "5/25 21:15:09.436" options)
          :source-name "Pwnstar"
          :skill       "Berserking"
          :spell?      false}))

  (is (= (parse-line "5/25 21:46:25.894  You cast Remove Lesser Curse." options)
         {:id          :cast
          :logfmt      :cast
          :event       :cast
          :line        "5/25 21:46:25.894  You cast Remove Lesser Curse."
          :timestamp   (parse-log-timestamp "5/25 21:46:25.894" options)
          :source-name owner-char-name
          :skill       "Remove Lesser Curse"
          :spell?      true})))
